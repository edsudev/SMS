// <auto-generated />
using System;
using EDSU_SYSTEM.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EDSU_SYSTEM.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230206011610_BursaryUpdate")]
    partial class BursaryUpdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EDSU_SYSTEM.Models.AdmissionLetter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Body")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("FacultyId")
                        .HasColumnType("int");

                    b.Property<string>("Header")
                        .HasColumnType("longtext");

                    b.Property<string>("Note")
                        .HasColumnType("longtext");

                    b.Property<string>("Ref")
                        .HasColumnType("longtext");

                    b.Property<string>("Registrar")
                        .HasColumnType("longtext");

                    b.Property<string>("Var1")
                        .HasColumnType("longtext");

                    b.Property<string>("Var2")
                        .HasColumnType("longtext");

                    b.Property<string>("Var3")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("FacultyId");

                    b.ToTable("AdmissionLetters");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.Applicant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AdmittedInto")
                        .HasColumnType("int");

                    b.Property<string>("AltPhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("ApplicantId")
                        .HasColumnType("longtext");

                    b.Property<string>("ApplicantionId")
                        .HasColumnType("longtext");

                    b.Property<string>("BirthCertUpload")
                        .HasColumnType("longtext");

                    b.Property<bool?>("Cleared")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ContactAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("CourseChoseInJamb")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DirectEntryUpload")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstChoice")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<bool>("Indigine")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("JambUpload")
                        .HasColumnType("longtext");

                    b.Property<int>("LGAId")
                        .HasColumnType("int");

                    b.Property<string>("LGAUpload")
                        .HasColumnType("longtext");

                    b.Property<int>("LevelAdmittedTo")
                        .HasColumnType("int");

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("longtext");

                    b.Property<string>("ModeOfEntry")
                        .HasColumnType("longtext");

                    b.Property<int>("NationalityId")
                        .HasColumnType("int");

                    b.Property<int>("NoOfSittings")
                        .HasColumnType("int");

                    b.Property<string>("OtherName")
                        .HasColumnType("longtext");

                    b.Property<string>("ParentAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("ParentAlternatePhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("ParentEmail")
                        .HasColumnType("longtext");

                    b.Property<string>("ParentFullName")
                        .HasColumnType("longtext");

                    b.Property<string>("ParentOccupation")
                        .HasColumnType("longtext");

                    b.Property<string>("ParentPhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("PassportUpload")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<string>("PermanentHomeAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("longtext");

                    b.Property<string>("PreviousGrade")
                        .HasColumnType("longtext");

                    b.Property<string>("PreviousInstitution")
                        .HasColumnType("longtext");

                    b.Property<string>("PreviousLevel")
                        .HasColumnType("longtext");

                    b.Property<string>("PrimarySchool")
                        .HasColumnType("longtext");

                    b.Property<int>("ProgrameId")
                        .HasColumnType("int");

                    b.Property<bool>("Screened")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecondChoice")
                        .HasColumnType("longtext");

                    b.Property<string>("SecondarySchool")
                        .HasColumnType("longtext");

                    b.Property<string>("Sex")
                        .HasColumnType("longtext");

                    b.Property<string>("Ssce1")
                        .HasColumnType("longtext");

                    b.Property<string>("Ssce1Number")
                        .HasColumnType("longtext");

                    b.Property<string>("Ssce1Subject1")
                        .HasColumnType("longtext");

                    b.Property<string>("Ssce1Subject1Grade")
                        .HasColumnType("longtext");

                    b.Property<string>("Ssce1Subject2")
                        .HasColumnType("longtext");

                    b.Property<string>("Ssce1Subject2Grade")
                        .HasColumnType("longtext");

                    b.Property<string>("Ssce1Subject3")
                        .HasColumnType("longtext");

                    b.Property<string>("Ssce1Subject3Grade")
                        .HasColumnType("longtext");

                    b.Property<string>("Ssce1Subject4")
                        .HasColumnType("longtext");

                    b.Property<string>("Ssce1Subject4Grade")
                        .HasColumnType("longtext");

                    b.Property<string>("Ssce1Subject5")
                        .HasColumnType("longtext");

                    b.Property<string>("Ssce1Subject5Grade")
                        .HasColumnType("longtext");

                    b.Property<string>("Ssce1Subject6")
                        .HasColumnType("longtext");

                    b.Property<string>("Ssce1Subject6Grade")
                        .HasColumnType("longtext");

                    b.Property<string>("Ssce1Subject7")
                        .HasColumnType("longtext");

                    b.Property<string>("Ssce1Subject7Grade")
                        .HasColumnType("longtext");

                    b.Property<string>("Ssce1Subject8")
                        .HasColumnType("longtext");

                    b.Property<string>("Ssce1Subject8Grade")
                        .HasColumnType("longtext");

                    b.Property<string>("Ssce1Subject9")
                        .HasColumnType("longtext");

                    b.Property<string>("Ssce1Subject9Grade")
                        .HasColumnType("longtext");

                    b.Property<string>("Ssce1Type")
                        .HasColumnType("longtext");

                    b.Property<string>("Ssce1Year")
                        .HasColumnType("longtext");

                    b.Property<string>("Ssce2Number")
                        .HasColumnType("longtext");

                    b.Property<string>("Ssce2Subject1")
                        .HasColumnType("longtext");

                    b.Property<int>("Ssce2Subject1Grade")
                        .HasColumnType("int");

                    b.Property<string>("Ssce2Subject2")
                        .HasColumnType("longtext");

                    b.Property<int>("Ssce2Subject2Grade")
                        .HasColumnType("int");

                    b.Property<string>("Ssce2Subject3")
                        .HasColumnType("longtext");

                    b.Property<int>("Ssce2Subject3Grade")
                        .HasColumnType("int");

                    b.Property<string>("Ssce2Subject4")
                        .HasColumnType("longtext");

                    b.Property<int>("Ssce2Subject4Grade")
                        .HasColumnType("int");

                    b.Property<string>("Ssce2Subject5")
                        .HasColumnType("longtext");

                    b.Property<int>("Ssce2Subject5Grade")
                        .HasColumnType("int");

                    b.Property<string>("Ssce2Subject6")
                        .HasColumnType("longtext");

                    b.Property<int>("Ssce2Subject6Grade")
                        .HasColumnType("int");

                    b.Property<string>("Ssce2Subject7")
                        .HasColumnType("longtext");

                    b.Property<int>("Ssce2Subject7Grade")
                        .HasColumnType("int");

                    b.Property<string>("Ssce2Subject8")
                        .HasColumnType("longtext");

                    b.Property<int>("Ssce2Subject8Grade")
                        .HasColumnType("int");

                    b.Property<string>("Ssce2Subject9")
                        .HasColumnType("longtext");

                    b.Property<int>("Ssce2Subject9Grade")
                        .HasColumnType("int");

                    b.Property<string>("Ssce2Type")
                        .HasColumnType("longtext");

                    b.Property<string>("Ssce2Year")
                        .HasColumnType("longtext");

                    b.Property<int>("StateOfOriginId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasColumnType("longtext");

                    b.Property<string>("ThirdChoice")
                        .HasColumnType("longtext");

                    b.Property<string>("UTMENumber")
                        .HasColumnType("longtext");

                    b.Property<string>("UTMESubject1")
                        .HasColumnType("longtext");

                    b.Property<int>("UTMESubject1Score")
                        .HasColumnType("int");

                    b.Property<string>("UTMESubject2")
                        .HasColumnType("longtext");

                    b.Property<int>("UTMESubject2Score")
                        .HasColumnType("int");

                    b.Property<string>("UTMESubject3")
                        .HasColumnType("longtext");

                    b.Property<int>("UTMESubject3Score")
                        .HasColumnType("int");

                    b.Property<string>("UTMESubject4")
                        .HasColumnType("longtext");

                    b.Property<int>("UTMESubject4Score")
                        .HasColumnType("int");

                    b.Property<int>("UTMETotal")
                        .HasColumnType("int");

                    b.Property<int>("YearOfAdmission")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdmittedInto");

                    b.HasIndex("LGAId");

                    b.HasIndex("LevelAdmittedTo");

                    b.HasIndex("NationalityId");

                    b.HasIndex("ProgrameId");

                    b.HasIndex("StateOfOriginId");

                    b.HasIndex("YearOfAdmission");

                    b.ToTable("UgApplicants");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<int>("Parent")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<int>("PgStudent")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.Property<int>("StudentsId")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.HasIndex("Parent");

                    b.HasIndex("PgStudent");

                    b.HasIndex("StaffId");

                    b.HasIndex("StudentsId");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.BursaryClearance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClearanceId")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PaymentId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaymentId");

                    b.HasIndex("StudentId");

                    b.ToTable("BursaryClearances");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.Countries", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("longtext");

                    b.Property<string>("CourseId")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreditUnit")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("Semester")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("Level");

                    b.HasIndex("Semester");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.CourseAllocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CourseAllocationId")
                        .HasColumnType("longtext");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("CourseLecturerRole")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("LecturerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("LecturerId", "CourseId")
                        .IsUnique();

                    b.ToTable("CourseAllocations");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.CourseRegistration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("CourseRegId")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateApproved")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("SessionId");

                    b.HasIndex("StudentId", "CourseId")
                        .IsUnique();

                    b.ToTable("CourseRegistrations");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.CreditUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("LevelId")
                        .HasColumnType("int");

                    b.Property<int>("Max")
                        .HasColumnType("int");

                    b.Property<int>("Min")
                        .HasColumnType("int");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("LevelId");

                    b.HasIndex("SemesterId");

                    b.HasIndex("SessionId");

                    b.ToTable("CreditUnits");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("FacultyId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("ShortCode")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.ENTVacancy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<string>("ApplicantId")
                        .HasColumnType("longtext");

                    b.Property<string>("BusinessName")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext");

                    b.Property<string>("TellerNo")
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ENTVacancies");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.Evaluation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EvaluationId")
                        .HasColumnType("longtext");

                    b.Property<int>("Grade1")
                        .HasColumnType("int");

                    b.Property<int>("Grade10")
                        .HasColumnType("int");

                    b.Property<int>("Grade11")
                        .HasColumnType("int");

                    b.Property<int>("Grade12")
                        .HasColumnType("int");

                    b.Property<int>("Grade13")
                        .HasColumnType("int");

                    b.Property<int>("Grade14")
                        .HasColumnType("int");

                    b.Property<int>("Grade15")
                        .HasColumnType("int");

                    b.Property<int>("Grade16")
                        .HasColumnType("int");

                    b.Property<int>("Grade17")
                        .HasColumnType("int");

                    b.Property<int>("Grade18")
                        .HasColumnType("int");

                    b.Property<int>("Grade19")
                        .HasColumnType("int");

                    b.Property<int>("Grade2")
                        .HasColumnType("int");

                    b.Property<int>("Grade20")
                        .HasColumnType("int");

                    b.Property<int>("Grade21")
                        .HasColumnType("int");

                    b.Property<int>("Grade22")
                        .HasColumnType("int");

                    b.Property<int>("Grade23")
                        .HasColumnType("int");

                    b.Property<int>("Grade3")
                        .HasColumnType("int");

                    b.Property<int>("Grade4")
                        .HasColumnType("int");

                    b.Property<int>("Grade5")
                        .HasColumnType("int");

                    b.Property<int>("Grade6")
                        .HasColumnType("int");

                    b.Property<int>("Grade7")
                        .HasColumnType("int");

                    b.Property<int>("Grade8")
                        .HasColumnType("int");

                    b.Property<int>("Grade9")
                        .HasColumnType("int");

                    b.Property<int>("LecturerId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("Grade1");

                    b.HasIndex("Grade10");

                    b.HasIndex("Grade11");

                    b.HasIndex("Grade12");

                    b.HasIndex("Grade13");

                    b.HasIndex("Grade14");

                    b.HasIndex("Grade15");

                    b.HasIndex("Grade16");

                    b.HasIndex("Grade17");

                    b.HasIndex("Grade18");

                    b.HasIndex("Grade19");

                    b.HasIndex("Grade2");

                    b.HasIndex("Grade20");

                    b.HasIndex("Grade21");

                    b.HasIndex("Grade22");

                    b.HasIndex("Grade23");

                    b.HasIndex("Grade3");

                    b.HasIndex("Grade4");

                    b.HasIndex("Grade5");

                    b.HasIndex("Grade6");

                    b.HasIndex("Grade7");

                    b.HasIndex("Grade8");

                    b.HasIndex("Grade9");

                    b.HasIndex("LecturerId");

                    b.HasIndex("QuestionId");

                    b.HasIndex("SemesterId");

                    b.HasIndex("SessionId");

                    b.HasIndex("StudentId", "LecturerId", "SessionId", "CourseId")
                        .IsUnique();

                    b.ToTable("Evaluations");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.EvaluationGrade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Grade")
                        .HasColumnType("longtext");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EvaluationGrades");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.EvaluationQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Question")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("EvaluationQuestions");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.Exeat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AltParentPhone")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ArrivalDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ChiefPortalStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Dean")
                        .HasColumnType("int");

                    b.Property<string>("Department")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Destination")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("ExeatId")
                        .HasColumnType("longtext");

                    b.Property<int>("GatePass")
                        .HasColumnType("int");

                    b.Property<int>("Hall")
                        .HasColumnType("int");

                    b.Property<int>("HallMasterStatus")
                        .HasColumnType("int");

                    b.Property<string>("MatNo")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("NoOfDays")
                        .HasColumnType("int");

                    b.Property<string>("ParentPhone")
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext");

                    b.Property<string>("Reason")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Hall");

                    b.ToTable("Exeats");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.Faculty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("ShortCode")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Faculties");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.Fee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Faculty")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Level1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Level2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Level3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Level4")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Level5")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Level6")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Msc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Pgd")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Phd")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("SessionId");

                    b.ToTable("Fees");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.Hostel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("SessionId");

                    b.ToTable("Hostels");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.IctComplaint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Acknowledgment")
                        .HasColumnType("longtext");

                    b.Property<string>("CC")
                        .HasColumnType("longtext");

                    b.Property<string>("Complain")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Dept")
                        .HasColumnType("longtext");

                    b.Property<string>("Location")
                        .HasColumnType("longtext");

                    b.Property<string>("Response")
                        .HasColumnType("longtext");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("IctComplaints");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.Level", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Levels");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.LevelAdviser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LevelAdviserId")
                        .HasColumnType("longtext");

                    b.Property<int>("LevelId")
                        .HasColumnType("int");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LevelId");

                    b.HasIndex("StaffId");

                    b.ToTable("LevelAdvisers");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.Lga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("State_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Lgas");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.Mail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Draft")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("File")
                        .HasColumnType("longtext");

                    b.Property<string>("From")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsImportant")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("MailId")
                        .HasColumnType("longtext");

                    b.Property<string>("Message")
                        .HasColumnType("longtext");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .HasColumnType("longtext");

                    b.Property<int>("Through")
                        .HasColumnType("int");

                    b.Property<int>("Through2")
                        .HasColumnType("int");

                    b.Property<int>("Through3")
                        .HasColumnType("int");

                    b.Property<int>("To")
                        .HasColumnType("int");

                    b.Property<bool>("Trash")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Through");

                    b.HasIndex("Through2");

                    b.HasIndex("Through3");

                    b.HasIndex("To");

                    b.ToTable("Mails");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.OerConferencePaper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Abstract")
                        .HasColumnType("longtext");

                    b.Property<string>("Authors")
                        .HasColumnType("longtext");

                    b.Property<string>("ConferencePaperId")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPublished")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Issue")
                        .HasColumnType("longtext");

                    b.Property<string>("Keywords")
                        .HasColumnType("longtext");

                    b.Property<string>("NoOfPages")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("PublicationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PublisherName")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.Property<string>("Upload")
                        .HasColumnType("longtext");

                    b.Property<string>("UploadedBy")
                        .HasColumnType("longtext");

                    b.Property<string>("Volume")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("OerConferencePapers");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.OerCourseware", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CourseCode")
                        .HasColumnType("longtext");

                    b.Property<string>("CourseTitle")
                        .HasColumnType("longtext");

                    b.Property<string>("CoursewareId")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int?>("FacultyId")
                        .HasColumnType("int");

                    b.Property<string>("LectureName")
                        .HasColumnType("longtext");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Synopsis")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Upload")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("FacultyId");

                    b.ToTable("OerCoursewares");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.OerJournalArticle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Abstract")
                        .HasColumnType("longtext");

                    b.Property<string>("Authors")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPublished")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Issue")
                        .HasColumnType("longtext");

                    b.Property<string>("JournalId")
                        .HasColumnType("longtext");

                    b.Property<string>("Keywords")
                        .HasColumnType("longtext");

                    b.Property<string>("NoOfPages")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("PublicationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PublisherName")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.Property<string>("Upload")
                        .HasColumnType("longtext");

                    b.Property<string>("UploadedBy")
                        .HasColumnType("longtext");

                    b.Property<string>("Volume")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("OerJournalArticles");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.OerStudentProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Abstract")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int?>("FacultyId")
                        .HasColumnType("int");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("MatNo")
                        .HasColumnType("longtext");

                    b.Property<string>("ModeOfStudy")
                        .HasColumnType("longtext");

                    b.Property<string>("NameOfStudent")
                        .HasColumnType("longtext");

                    b.Property<string>("ProjectId")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("PublicationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("SessionOfAdmission")
                        .HasColumnType("longtext");

                    b.Property<string>("Synopsis")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Upload")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("FacultyId");

                    b.ToTable("OerStudentProjects");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.OerTextbook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Author")
                        .HasColumnType("longtext");

                    b.Property<string>("BookId")
                        .HasColumnType("longtext");

                    b.Property<string>("Contributors")
                        .HasColumnType("longtext");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Edition")
                        .HasColumnType("longtext");

                    b.Property<string>("FieldOfStudy")
                        .HasColumnType("longtext");

                    b.Property<string>("ISBN")
                        .HasColumnType("longtext");

                    b.Property<int>("NoOfPages")
                        .HasColumnType("int");

                    b.Property<string>("PublicationYear")
                        .HasColumnType("longtext");

                    b.Property<string>("Publisher")
                        .HasColumnType("longtext");

                    b.Property<string>("Summary")
                        .HasColumnType("longtext");

                    b.Property<string>("Text")
                        .HasColumnType("longtext");

                    b.Property<string>("Upload")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("OerTextbooks");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.OtherFees", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SessionId");

                    b.ToTable("OtherFees");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.Parent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("ParentId")
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Parent");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ReceiptNo")
                        .HasColumnType("longtext");

                    b.Property<string>("Ref")
                        .HasColumnType("longtext");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.Property<int>("WalletId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SessionId");

                    b.HasIndex("WalletId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.PgApplicant", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AddressOfNextOfKin")
                        .HasColumnType("longtext");

                    b.Property<int>("AdmittedInto")
                        .HasColumnType("int");

                    b.Property<string>("AlternatePhoneNumberOfNextOfKin")
                        .HasColumnType("longtext");

                    b.Property<string>("ApplicantionId")
                        .HasColumnType("longtext");

                    b.Property<string>("AreaOfSpecialization")
                        .HasColumnType("longtext");

                    b.Property<string>("BirthCertificate")
                        .HasColumnType("longtext");

                    b.Property<string>("ClassOfDegree")
                        .HasColumnType("longtext");

                    b.Property<bool?>("Cleared")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ContactAddress")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CurrentQualification")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("EmailOfNextOfKin")
                        .HasColumnType("longtext");

                    b.Property<string>("EmploymentHistory")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("FullNameOfNextOfKin")
                        .HasColumnType("longtext");

                    b.Property<string>("HigherDegrees")
                        .HasColumnType("longtext");

                    b.Property<int>("LGA")
                        .HasColumnType("int");

                    b.Property<string>("LGAUpload")
                        .HasColumnType("longtext");

                    b.Property<int>("LevelAdmittedTo")
                        .HasColumnType("int");

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("longtext");

                    b.Property<string>("NYSC")
                        .HasColumnType("longtext");

                    b.Property<int>("Nationality")
                        .HasColumnType("int");

                    b.Property<int>("NoOfSittings")
                        .HasColumnType("int");

                    b.Property<string>("OccupationOfNextOfKin")
                        .HasColumnType("longtext");

                    b.Property<string>("OtherName")
                        .HasColumnType("longtext");

                    b.Property<string>("Passport")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<string>("PercentageOfResult")
                        .HasColumnType("longtext");

                    b.Property<string>("PermanentHomeAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber2")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumberOfNextOfKin")
                        .HasColumnType("longtext");

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("longtext");

                    b.Property<string>("PreviousInstitution")
                        .HasColumnType("longtext");

                    b.Property<string>("PrimarySchool")
                        .HasColumnType("longtext");

                    b.Property<string>("ProgramApplyingFor")
                        .HasColumnType("longtext");

                    b.Property<string>("Ref1")
                        .HasColumnType("longtext");

                    b.Property<string>("Ref2")
                        .HasColumnType("longtext");

                    b.Property<string>("Ref3")
                        .HasColumnType("longtext");

                    b.Property<string>("ResearchExperience")
                        .HasColumnType("longtext");

                    b.Property<bool>("Screened")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecondarySchool")
                        .HasColumnType("longtext");

                    b.Property<string>("Sex")
                        .HasColumnType("longtext");

                    b.Property<string>("Ssce1")
                        .HasColumnType("longtext");

                    b.Property<string>("Ssce1Number")
                        .HasColumnType("longtext");

                    b.Property<string>("Ssce1Subject1")
                        .HasColumnType("longtext");

                    b.Property<int>("Ssce1Subject1Grade")
                        .HasColumnType("int");

                    b.Property<string>("Ssce1Subject2")
                        .HasColumnType("longtext");

                    b.Property<int>("Ssce1Subject2Grade")
                        .HasColumnType("int");

                    b.Property<string>("Ssce1Subject3")
                        .HasColumnType("longtext");

                    b.Property<int>("Ssce1Subject3Grade")
                        .HasColumnType("int");

                    b.Property<string>("Ssce1Subject4")
                        .HasColumnType("longtext");

                    b.Property<int>("Ssce1Subject4Grade")
                        .HasColumnType("int");

                    b.Property<string>("Ssce1Subject5")
                        .HasColumnType("longtext");

                    b.Property<int>("Ssce1Subject5Grade")
                        .HasColumnType("int");

                    b.Property<string>("Ssce1Subject6")
                        .HasColumnType("longtext");

                    b.Property<int>("Ssce1Subject6Grade")
                        .HasColumnType("int");

                    b.Property<string>("Ssce1Subject7")
                        .HasColumnType("longtext");

                    b.Property<int>("Ssce1Subject7Grade")
                        .HasColumnType("int");

                    b.Property<string>("Ssce1Subject8")
                        .HasColumnType("longtext");

                    b.Property<int>("Ssce1Subject8Grade")
                        .HasColumnType("int");

                    b.Property<string>("Ssce1Subject9")
                        .HasColumnType("longtext");

                    b.Property<int>("Ssce1Subject9Grade")
                        .HasColumnType("int");

                    b.Property<string>("Ssce1Type")
                        .HasColumnType("longtext");

                    b.Property<string>("Ssce1Year")
                        .HasColumnType("longtext");

                    b.Property<string>("Ssce2")
                        .HasColumnType("longtext");

                    b.Property<string>("Ssce2Number")
                        .HasColumnType("longtext");

                    b.Property<string>("Ssce2Subject1")
                        .HasColumnType("longtext");

                    b.Property<int>("Ssce2Subject1Grade")
                        .HasColumnType("int");

                    b.Property<string>("Ssce2Subject2")
                        .HasColumnType("longtext");

                    b.Property<int>("Ssce2Subject2Grade")
                        .HasColumnType("int");

                    b.Property<string>("Ssce2Subject3")
                        .HasColumnType("longtext");

                    b.Property<int>("Ssce2Subject3Grade")
                        .HasColumnType("int");

                    b.Property<string>("Ssce2Subject4")
                        .HasColumnType("longtext");

                    b.Property<int>("Ssce2Subject4Grade")
                        .HasColumnType("int");

                    b.Property<string>("Ssce2Subject5")
                        .HasColumnType("longtext");

                    b.Property<int>("Ssce2Subject5Grade")
                        .HasColumnType("int");

                    b.Property<string>("Ssce2Subject6")
                        .HasColumnType("longtext");

                    b.Property<int>("Ssce2Subject6Grade")
                        .HasColumnType("int");

                    b.Property<string>("Ssce2Subject7")
                        .HasColumnType("longtext");

                    b.Property<int>("Ssce2Subject7Grade")
                        .HasColumnType("int");

                    b.Property<string>("Ssce2Subject8")
                        .HasColumnType("longtext");

                    b.Property<int>("Ssce2Subject8Grade")
                        .HasColumnType("int");

                    b.Property<string>("Ssce2Subject9")
                        .HasColumnType("longtext");

                    b.Property<int>("Ssce2Subject9Grade")
                        .HasColumnType("int");

                    b.Property<string>("Ssce2Type")
                        .HasColumnType("longtext");

                    b.Property<string>("Ssce2Year")
                        .HasColumnType("longtext");

                    b.Property<int>("StateOfOrigin")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("YearGraduated")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("YearOfAdmission")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("AdmittedInto");

                    b.HasIndex("LGA");

                    b.HasIndex("LevelAdmittedTo");

                    b.HasIndex("Nationality");

                    b.HasIndex("StateOfOrigin");

                    b.HasIndex("YearOfAdmission");

                    b.ToTable("PgApplicants");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.PgCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreditUnit")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("ProgrammeId")
                        .HasColumnType("int");

                    b.Property<int>("Semester")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("Level");

                    b.HasIndex("ProgrammeId");

                    b.HasIndex("Semester");

                    b.ToTable("PgCourses");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.PgMainWallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ApplicantId")
                        .HasColumnType("int");

                    b.Property<decimal>("BulkDebitBalanace")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CreditBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("WalletId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantId");

                    b.ToTable("PgMainWallets");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.PgProgram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NameOfProgram")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("PgPrograms");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.PgProgress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FileName")
                        .HasColumnType("longtext");

                    b.Property<int>("Program")
                        .HasColumnType("int");

                    b.Property<int>("Ranking")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("SupervisorId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Program");

                    b.HasIndex("StudentId");

                    b.HasIndex("SupervisorId");

                    b.ToTable("PgProgresses");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.PgResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CA")
                        .HasColumnType("longtext");

                    b.Property<string>("CourseId")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Exam")
                        .HasColumnType("longtext");

                    b.Property<string>("Grade")
                        .HasColumnType("longtext");

                    b.Property<string>("StudentId")
                        .HasColumnType("longtext");

                    b.Property<string>("Total")
                        .HasColumnType("longtext");

                    b.Property<string>("Upgrade")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("PgResults");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.PgStudent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AltPhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<int>("ApplicantId")
                        .HasColumnType("int");

                    b.Property<bool>("Cleared")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ClearedBy")
                        .HasColumnType("int");

                    b.Property<string>("ContactAddress")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CurrentSession")
                        .HasColumnType("int");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Department")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<int>("Faculty")
                        .HasColumnType("int");

                    b.Property<string>("Fullname")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsStillAStudent")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LGAId")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("longtext");

                    b.Property<string>("MatNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("ModeOfAdmission")
                        .HasColumnType("longtext");

                    b.Property<int>("NationalityId")
                        .HasColumnType("int");

                    b.Property<string>("NextOfKinAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("NextOfKinPhone")
                        .HasColumnType("longtext");

                    b.Property<string>("NextOfKinRelationship")
                        .HasColumnType("longtext");

                    b.Property<string>("NextOfkinName")
                        .HasColumnType("longtext");

                    b.Property<string>("PermanentHomeAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext");

                    b.Property<string>("Picture")
                        .HasColumnType("longtext");

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("longtext");

                    b.Property<int?>("Religion")
                        .HasColumnType("int");

                    b.Property<string>("SchoolEmailAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("Sex")
                        .HasColumnType("longtext");

                    b.Property<int>("StateOfOriginId")
                        .HasColumnType("int");

                    b.Property<string>("StudentId")
                        .HasColumnType("longtext");

                    b.Property<int>("YearOfAdmission")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantId");

                    b.HasIndex("ClearedBy");

                    b.HasIndex("CurrentSession");

                    b.HasIndex("Department");

                    b.HasIndex("Faculty");

                    b.HasIndex("LGAId");

                    b.HasIndex("Level");

                    b.HasIndex("NationalityId");

                    b.HasIndex("StateOfOriginId");

                    b.HasIndex("YearOfAdmission");

                    b.ToTable("PostGraduateStudents");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.PgStudentSupervisor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Student")
                        .HasColumnType("int");

                    b.Property<int>("Supervisor")
                        .HasColumnType("int");

                    b.Property<string>("SupervisorRole")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Student");

                    b.HasIndex("Supervisor");

                    b.ToTable("PgStudentsSupervisors");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.PgSubWallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("AcceptanceFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ApplicantId")
                        .HasColumnType("int");

                    b.Property<decimal>("CreditBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Debit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Department")
                        .HasColumnType("int");

                    b.Property<decimal>("EDHIS")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FortyPercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LMS")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Pic")
                        .HasColumnType("longtext");

                    b.Property<string>("RegNo")
                        .HasColumnType("longtext");

                    b.Property<decimal>("SRC")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<decimal>("SixtyPercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("Tuition")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("WalletId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantId");

                    b.HasIndex("Department");

                    b.HasIndex("Level");

                    b.HasIndex("SessionId");

                    b.ToTable("PgSubWallets");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.Result", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CA")
                        .HasColumnType("longtext");

                    b.Property<string>("CourseId")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Exam")
                        .HasColumnType("longtext");

                    b.Property<string>("Grade")
                        .HasColumnType("longtext");

                    b.Property<string>("ResultId")
                        .HasColumnType("longtext");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<string>("StudentId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Total")
                        .HasColumnType("longtext");

                    b.Property<string>("Upgrade")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("SessionId");

                    b.HasIndex("StudentId", "CourseId", "SessionId")
                        .IsUnique();

                    b.ToTable("Results");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.Semester", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Semesters");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("suffix")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.SSCEGrade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Grade")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("SSCEGrades");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.SsceSubjects", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("SubjectName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("SsceSubjects");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Academia")
                        .HasColumnType("longtext");

                    b.Property<string>("AreaOfSpecialization")
                        .HasColumnType("longtext");

                    b.Property<string>("CVUpload")
                        .HasColumnType("longtext");

                    b.Property<string>("CertUpload")
                        .HasColumnType("longtext");

                    b.Property<string>("ContactAddress")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CurrentPlaceOfWork")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("EmployedBy")
                        .HasColumnType("longtext");

                    b.Property<int>("FacultyId")
                        .HasColumnType("int");

                    b.Property<string>("FieldOfStudy")
                        .HasColumnType("longtext");

                    b.Property<string>("GoogleScholar")
                        .HasColumnType("longtext");

                    b.Property<string>("HighestQualification")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsEmployed")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LGAId")
                        .HasColumnType("int");

                    b.Property<string>("LinkedIn")
                        .HasColumnType("longtext");

                    b.Property<string>("Mendeley")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("NationalityId")
                        .HasColumnType("int");

                    b.Property<string>("ORCID")
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext");

                    b.Property<string>("Picture")
                        .HasColumnType("longtext");

                    b.Property<string>("Position")
                        .HasColumnType("longtext");

                    b.Property<string>("PositionAtCurrentPlaceOfWork")
                        .HasColumnType("longtext");

                    b.Property<string>("ResearchGate")
                        .HasColumnType("longtext");

                    b.Property<string>("ResearcherId")
                        .HasColumnType("longtext");

                    b.Property<string>("SchoolEmail")
                        .HasColumnType("longtext");

                    b.Property<string>("Scopus")
                        .HasColumnType("longtext");

                    b.Property<string>("Sex")
                        .HasColumnType("longtext");

                    b.Property<string>("StaffId")
                        .HasColumnType("longtext");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("WorkedInHigherInstuition")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("YearsOfExperience")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("FacultyId");

                    b.HasIndex("LGAId");

                    b.HasIndex("NationalityId");

                    b.HasIndex("StateId");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.States", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("States");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AltPhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<int>("ApplicantId")
                        .HasColumnType("int");

                    b.Property<bool>("Cleared")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ClearedBy")
                        .HasColumnType("int");

                    b.Property<string>("ContactAddress")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CurrentSession")
                        .HasColumnType("int");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Department")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<int>("Faculty")
                        .HasColumnType("int");

                    b.Property<string>("Fullname")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsStillAStudent")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LGAId")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("longtext");

                    b.Property<string>("MatNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("ModeOfAdmission")
                        .HasColumnType("longtext");

                    b.Property<int>("NationalityId")
                        .HasColumnType("int");

                    b.Property<string>("ParentAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("ParentAltPhone")
                        .HasColumnType("longtext");

                    b.Property<string>("ParentEmail")
                        .HasColumnType("longtext");

                    b.Property<string>("ParentName")
                        .HasColumnType("longtext");

                    b.Property<string>("ParentOccupation")
                        .HasColumnType("longtext");

                    b.Property<string>("ParentPhone")
                        .HasColumnType("longtext");

                    b.Property<string>("PermanentHomeAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext");

                    b.Property<string>("Picture")
                        .HasColumnType("longtext");

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("longtext");

                    b.Property<int>("ProgrameId")
                        .HasColumnType("int");

                    b.Property<int?>("Religion")
                        .HasColumnType("int");

                    b.Property<string>("SchoolEmailAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("Sex")
                        .HasColumnType("longtext");

                    b.Property<int>("StateOfOriginId")
                        .HasColumnType("int");

                    b.Property<string>("StudentId")
                        .HasColumnType("longtext");

                    b.Property<int>("StudentStatus")
                        .HasColumnType("int");

                    b.Property<string>("UTMENumber")
                        .HasColumnType("longtext");

                    b.Property<int>("YearOfAdmission")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantId");

                    b.HasIndex("ClearedBy");

                    b.HasIndex("CurrentSession");

                    b.HasIndex("Department");

                    b.HasIndex("Faculty");

                    b.HasIndex("LGAId");

                    b.HasIndex("Level");

                    b.HasIndex("NationalityId");

                    b.HasIndex("ProgrameId");

                    b.HasIndex("StateOfOriginId");

                    b.HasIndex("YearOfAdmission");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.TimeTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<int>("LecturerId")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("Time")
                        .HasColumnType("time(6)");

                    b.Property<string>("TimeTableId")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Venue")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("LecturerId");

                    b.ToTable("TimeTables");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.ToDo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsImportant")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Owner")
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<string>("Task")
                        .HasColumnType("longtext");

                    b.Property<string>("ToDoId")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Todos");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.Transcript", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address1")
                        .HasColumnType("longtext");

                    b.Property<string>("Address2")
                        .HasColumnType("longtext");

                    b.Property<bool>("AppliedBefore")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("City")
                        .HasColumnType("longtext");

                    b.Property<string>("Country")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DestinationEmail")
                        .HasColumnType("longtext");

                    b.Property<string>("DestinationName")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Firstname")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("GraduationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("IfYes")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MatNo")
                        .HasColumnType("longtext");

                    b.Property<string>("NotificationOfResult")
                        .HasColumnType("longtext");

                    b.Property<string>("Othername")
                        .HasColumnType("longtext");

                    b.Property<string>("Others")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("Programme")
                        .HasColumnType("longtext");

                    b.Property<string>("Receipt")
                        .HasColumnType("longtext");

                    b.Property<string>("ReceiptNumber")
                        .HasColumnType("longtext");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasColumnType("longtext");

                    b.Property<int>("Title")
                        .HasColumnType("int");

                    b.Property<string>("TranscriptId")
                        .HasColumnType("longtext");

                    b.Property<string>("TranscriptLabel")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserId")
                        .HasColumnType("longtext");

                    b.Property<string>("ZipCode")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Transcripts");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.UgMainWallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ApplicantId")
                        .HasColumnType("int");

                    b.Property<decimal>("BulkDebitBalanace")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CreditBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("WalletId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantId");

                    b.ToTable("UgMainWallets");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.UgProgram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NameOfProgram")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Programs");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.UgProgress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FileName")
                        .HasColumnType("longtext");

                    b.Property<int>("Program")
                        .HasColumnType("int");

                    b.Property<int>("Ranking")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("SupervisorId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Program");

                    b.HasIndex("StudentId");

                    b.HasIndex("SupervisorId");

                    b.ToTable("UgProgresses");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.UgStudentSupervisor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Student")
                        .HasColumnType("int");

                    b.Property<int>("Supervisor")
                        .HasColumnType("int");

                    b.Property<string>("SupervisorRole")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Student");

                    b.HasIndex("Supervisor");

                    b.ToTable("UgStudentSupervisors");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.UgSubWallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("AcceptanceFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ApplicantId")
                        .HasColumnType("int");

                    b.Property<decimal>("CreditBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Debit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Department")
                        .HasColumnType("int");

                    b.Property<decimal>("EDHIS")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FortyPercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LMS")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Pic")
                        .HasColumnType("longtext");

                    b.Property<string>("RegNo")
                        .HasColumnType("longtext");

                    b.Property<decimal>("SRC")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<decimal>("SixtyPercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("Tuition")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Tuition2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("WalletId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantId");

                    b.HasIndex("Department");

                    b.HasIndex("Level");

                    b.HasIndex("SessionId");

                    b.ToTable("UgSubWallets");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActing")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDirector")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Message")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext");

                    b.Property<string>("Pic")
                        .HasColumnType("longtext");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.HasIndex("UnitId");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.UnitName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdateddAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("UnitNames");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.Vacancy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ApplicantId")
                        .HasColumnType("longtext");

                    b.Property<string>("AreaOfSpecialization")
                        .HasColumnType("longtext");

                    b.Property<string>("CVUpload")
                        .HasColumnType("longtext");

                    b.Property<string>("CertUpload")
                        .HasColumnType("longtext");

                    b.Property<string>("ContactAddress")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CurrentPlaceOfWork")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<int>("FacultyId")
                        .HasColumnType("int");

                    b.Property<string>("FieldOfStudy")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("HighestQualification")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsEmployed")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LGAId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<int>("NationalityId")
                        .HasColumnType("int");

                    b.Property<string>("OtherName")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext");

                    b.Property<string>("Picture")
                        .HasColumnType("longtext");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<string>("PositionAtCurrentPlaceOfWork")
                        .HasColumnType("longtext");

                    b.Property<string>("Sex")
                        .HasColumnType("longtext");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("WorkedInHigherInstuition")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("YearsOfExperience")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("FacultyId");

                    b.HasIndex("LGAId");

                    b.HasIndex("NationalityId");

                    b.HasIndex("Position");

                    b.HasIndex("StateId");

                    b.ToTable("Vacancies");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.Work", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Acknowledgment")
                        .HasColumnType("longtext");

                    b.Property<string>("CC")
                        .HasColumnType("longtext");

                    b.Property<string>("Complain")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Dept")
                        .HasColumnType("longtext");

                    b.Property<string>("Location")
                        .HasColumnType("longtext");

                    b.Property<string>("Response")
                        .HasColumnType("longtext");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Works");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.AdmissionLetter", b =>
                {
                    b.HasOne("EDSU_SYSTEM.Models.Department", "Departments")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Faculty", "Faculties")
                        .WithMany()
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departments");

                    b.Navigation("Faculties");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.Applicant", b =>
                {
                    b.HasOne("EDSU_SYSTEM.Models.Department", "Departments")
                        .WithMany()
                        .HasForeignKey("AdmittedInto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Lga", "LGAs")
                        .WithMany()
                        .HasForeignKey("LGAId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Level", "Levels")
                        .WithMany()
                        .HasForeignKey("LevelAdmittedTo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Countries", "Nationalities")
                        .WithMany()
                        .HasForeignKey("NationalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.UgProgram", "Programs")
                        .WithMany()
                        .HasForeignKey("ProgrameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.States", "States")
                        .WithMany()
                        .HasForeignKey("StateOfOriginId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Session", "YearOfAdmissions")
                        .WithMany()
                        .HasForeignKey("YearOfAdmission")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departments");

                    b.Navigation("LGAs");

                    b.Navigation("Levels");

                    b.Navigation("Nationalities");

                    b.Navigation("Programs");

                    b.Navigation("States");

                    b.Navigation("YearOfAdmissions");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.ApplicationUser", b =>
                {
                    b.HasOne("EDSU_SYSTEM.Models.Parent", "Parents")
                        .WithMany()
                        .HasForeignKey("Parent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.PgStudent", "PgStudents")
                        .WithMany()
                        .HasForeignKey("PgStudent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Staff", "Staffs")
                        .WithMany()
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Student", "Students")
                        .WithMany()
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parents");

                    b.Navigation("PgStudents");

                    b.Navigation("Staffs");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.BursaryClearance", b =>
                {
                    b.HasOne("EDSU_SYSTEM.Models.Payment", "Payments")
                        .WithMany()
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Student", "Students")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Payments");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.Course", b =>
                {
                    b.HasOne("EDSU_SYSTEM.Models.Department", "Departments")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Level", "Levels")
                        .WithMany()
                        .HasForeignKey("Level")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Semester", "Semesters")
                        .WithMany()
                        .HasForeignKey("Semester")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departments");

                    b.Navigation("Levels");

                    b.Navigation("Semesters");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.CourseAllocation", b =>
                {
                    b.HasOne("EDSU_SYSTEM.Models.Course", "Courses")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("LecturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Courses");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.CourseRegistration", b =>
                {
                    b.HasOne("EDSU_SYSTEM.Models.Course", "Courses")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Session", "Sessions")
                        .WithMany()
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Student", "Students")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Courses");

                    b.Navigation("Sessions");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.CreditUnit", b =>
                {
                    b.HasOne("EDSU_SYSTEM.Models.Department", "Departments")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Level", "Levels")
                        .WithMany()
                        .HasForeignKey("LevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Semester", "Semesters")
                        .WithMany()
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Session", "Sessions")
                        .WithMany()
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departments");

                    b.Navigation("Levels");

                    b.Navigation("Semesters");

                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.Department", b =>
                {
                    b.HasOne("EDSU_SYSTEM.Models.Faculty", "Faculties")
                        .WithMany()
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faculties");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.Evaluation", b =>
                {
                    b.HasOne("EDSU_SYSTEM.Models.Course", "Courses")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.EvaluationGrade", "Grades1")
                        .WithMany()
                        .HasForeignKey("Grade1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.EvaluationGrade", "Grades10")
                        .WithMany()
                        .HasForeignKey("Grade10")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.EvaluationGrade", "Grades11")
                        .WithMany()
                        .HasForeignKey("Grade11")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.EvaluationGrade", "Grades12")
                        .WithMany()
                        .HasForeignKey("Grade12")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.EvaluationGrade", "Grades13")
                        .WithMany()
                        .HasForeignKey("Grade13")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.EvaluationGrade", "Grades14")
                        .WithMany()
                        .HasForeignKey("Grade14")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.EvaluationGrade", "Grades15")
                        .WithMany()
                        .HasForeignKey("Grade15")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.EvaluationGrade", "Grades16")
                        .WithMany()
                        .HasForeignKey("Grade16")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.EvaluationGrade", "Grades17")
                        .WithMany()
                        .HasForeignKey("Grade17")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.EvaluationGrade", "Grades18")
                        .WithMany()
                        .HasForeignKey("Grade18")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.EvaluationGrade", "Grades19")
                        .WithMany()
                        .HasForeignKey("Grade19")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.EvaluationGrade", "Grades2")
                        .WithMany()
                        .HasForeignKey("Grade2")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.EvaluationGrade", "Grades20")
                        .WithMany()
                        .HasForeignKey("Grade20")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.EvaluationGrade", "Grades21")
                        .WithMany()
                        .HasForeignKey("Grade21")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.EvaluationGrade", "Grades22")
                        .WithMany()
                        .HasForeignKey("Grade22")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.EvaluationGrade", "Grades23")
                        .WithMany()
                        .HasForeignKey("Grade23")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.EvaluationGrade", "Grades3")
                        .WithMany()
                        .HasForeignKey("Grade3")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.EvaluationGrade", "Grades4")
                        .WithMany()
                        .HasForeignKey("Grade4")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.EvaluationGrade", "Grades5")
                        .WithMany()
                        .HasForeignKey("Grade5")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.EvaluationGrade", "Grades6")
                        .WithMany()
                        .HasForeignKey("Grade6")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.EvaluationGrade", "Grades7")
                        .WithMany()
                        .HasForeignKey("Grade7")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.EvaluationGrade", "Grades8")
                        .WithMany()
                        .HasForeignKey("Grade8")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.EvaluationGrade", "Grades9")
                        .WithMany()
                        .HasForeignKey("Grade9")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Staff", "Lecturers")
                        .WithMany()
                        .HasForeignKey("LecturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.EvaluationQuestion", "Questions")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Semester", "Semesters")
                        .WithMany()
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Session", "Sessions")
                        .WithMany()
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Student", "Students")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Courses");

                    b.Navigation("Grades1");

                    b.Navigation("Grades10");

                    b.Navigation("Grades11");

                    b.Navigation("Grades12");

                    b.Navigation("Grades13");

                    b.Navigation("Grades14");

                    b.Navigation("Grades15");

                    b.Navigation("Grades16");

                    b.Navigation("Grades17");

                    b.Navigation("Grades18");

                    b.Navigation("Grades19");

                    b.Navigation("Grades2");

                    b.Navigation("Grades20");

                    b.Navigation("Grades21");

                    b.Navigation("Grades22");

                    b.Navigation("Grades23");

                    b.Navigation("Grades3");

                    b.Navigation("Grades4");

                    b.Navigation("Grades5");

                    b.Navigation("Grades6");

                    b.Navigation("Grades7");

                    b.Navigation("Grades8");

                    b.Navigation("Grades9");

                    b.Navigation("Lecturers");

                    b.Navigation("Questions");

                    b.Navigation("Semesters");

                    b.Navigation("Sessions");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.Exeat", b =>
                {
                    b.HasOne("EDSU_SYSTEM.Models.Hostel", "Hostels")
                        .WithMany()
                        .HasForeignKey("Hall")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hostels");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.Fee", b =>
                {
                    b.HasOne("EDSU_SYSTEM.Models.Department", "Departments")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Session", "Sessions")
                        .WithMany()
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departments");

                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.Hostel", b =>
                {
                    b.HasOne("EDSU_SYSTEM.Models.Session", "Sessions")
                        .WithMany()
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.LevelAdviser", b =>
                {
                    b.HasOne("EDSU_SYSTEM.Models.Level", "Levels")
                        .WithMany()
                        .HasForeignKey("LevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Staff", "Staffs")
                        .WithMany()
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Levels");

                    b.Navigation("Staffs");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.Mail", b =>
                {
                    b.HasOne("EDSU_SYSTEM.Models.Staff", "StaffThrough")
                        .WithMany()
                        .HasForeignKey("Through")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Staff", "StaffThrough2")
                        .WithMany()
                        .HasForeignKey("Through2")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Staff", "StaffThrough3")
                        .WithMany()
                        .HasForeignKey("Through3")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Staff", "StaffTo")
                        .WithMany()
                        .HasForeignKey("To")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StaffThrough");

                    b.Navigation("StaffThrough2");

                    b.Navigation("StaffThrough3");

                    b.Navigation("StaffTo");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.OerConferencePaper", b =>
                {
                    b.HasOne("EDSU_SYSTEM.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.OerCourseware", b =>
                {
                    b.HasOne("EDSU_SYSTEM.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("EDSU_SYSTEM.Models.Faculty", "Faculty")
                        .WithMany()
                        .HasForeignKey("FacultyId");

                    b.Navigation("Department");

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.OerJournalArticle", b =>
                {
                    b.HasOne("EDSU_SYSTEM.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.OerStudentProject", b =>
                {
                    b.HasOne("EDSU_SYSTEM.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("EDSU_SYSTEM.Models.Faculty", "Faculty")
                        .WithMany()
                        .HasForeignKey("FacultyId");

                    b.Navigation("Department");

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.OerTextbook", b =>
                {
                    b.HasOne("EDSU_SYSTEM.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.OtherFees", b =>
                {
                    b.HasOne("EDSU_SYSTEM.Models.Session", "Sessions")
                        .WithMany()
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.Payment", b =>
                {
                    b.HasOne("EDSU_SYSTEM.Models.Session", "Sessions")
                        .WithMany()
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.UgSubWallet", "Wallets")
                        .WithMany()
                        .HasForeignKey("WalletId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sessions");

                    b.Navigation("Wallets");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.PgApplicant", b =>
                {
                    b.HasOne("EDSU_SYSTEM.Models.Department", "Departments")
                        .WithMany()
                        .HasForeignKey("AdmittedInto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Lga", "Lgas")
                        .WithMany()
                        .HasForeignKey("LGA")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Level", "Levels")
                        .WithMany()
                        .HasForeignKey("LevelAdmittedTo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Countries", "Countries")
                        .WithMany()
                        .HasForeignKey("Nationality")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.States", "States")
                        .WithMany()
                        .HasForeignKey("StateOfOrigin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Session", "YearOfAdmissions")
                        .WithMany()
                        .HasForeignKey("YearOfAdmission")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Countries");

                    b.Navigation("Departments");

                    b.Navigation("Levels");

                    b.Navigation("Lgas");

                    b.Navigation("States");

                    b.Navigation("YearOfAdmissions");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.PgCourse", b =>
                {
                    b.HasOne("EDSU_SYSTEM.Models.Department", "Departments")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Level", "Levels")
                        .WithMany()
                        .HasForeignKey("Level")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.PgProgram", "Programme")
                        .WithMany()
                        .HasForeignKey("ProgrammeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Semester", "Semesters")
                        .WithMany()
                        .HasForeignKey("Semester")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departments");

                    b.Navigation("Levels");

                    b.Navigation("Programme");

                    b.Navigation("Semesters");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.PgMainWallet", b =>
                {
                    b.HasOne("EDSU_SYSTEM.Models.Applicant", "Applicants")
                        .WithMany()
                        .HasForeignKey("ApplicantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Applicants");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.PgProgress", b =>
                {
                    b.HasOne("EDSU_SYSTEM.Models.PgProgram", "Programs")
                        .WithMany()
                        .HasForeignKey("Program")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.PgStudentSupervisor", "Students")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.PgStudentSupervisor", "Supervisors")
                        .WithMany()
                        .HasForeignKey("SupervisorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Programs");

                    b.Navigation("Students");

                    b.Navigation("Supervisors");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.PgStudent", b =>
                {
                    b.HasOne("EDSU_SYSTEM.Models.Applicant", "Applicants")
                        .WithMany()
                        .HasForeignKey("ApplicantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Staff", "Staffs")
                        .WithMany()
                        .HasForeignKey("ClearedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Session", "Sessions")
                        .WithMany()
                        .HasForeignKey("CurrentSession")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Department", "Departments")
                        .WithMany()
                        .HasForeignKey("Department")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Faculty", "Faculties")
                        .WithMany()
                        .HasForeignKey("Faculty")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Lga", "LGAs")
                        .WithMany()
                        .HasForeignKey("LGAId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Level", "Levels")
                        .WithMany()
                        .HasForeignKey("Level")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Countries", "Nationalities")
                        .WithMany()
                        .HasForeignKey("NationalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.States", "States")
                        .WithMany()
                        .HasForeignKey("StateOfOriginId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Session", "YearOfAdmissions")
                        .WithMany()
                        .HasForeignKey("YearOfAdmission")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Applicants");

                    b.Navigation("Departments");

                    b.Navigation("Faculties");

                    b.Navigation("LGAs");

                    b.Navigation("Levels");

                    b.Navigation("Nationalities");

                    b.Navigation("Sessions");

                    b.Navigation("Staffs");

                    b.Navigation("States");

                    b.Navigation("YearOfAdmissions");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.PgStudentSupervisor", b =>
                {
                    b.HasOne("EDSU_SYSTEM.Models.PgStudent", "Students")
                        .WithMany()
                        .HasForeignKey("Student")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Staff", "Lecturers")
                        .WithMany()
                        .HasForeignKey("Supervisor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lecturers");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.PgSubWallet", b =>
                {
                    b.HasOne("EDSU_SYSTEM.Models.Applicant", "Applicants")
                        .WithMany()
                        .HasForeignKey("ApplicantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Department", "Departments")
                        .WithMany()
                        .HasForeignKey("Department")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Level", "Levels")
                        .WithMany()
                        .HasForeignKey("Level")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Session", "Sessions")
                        .WithMany()
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Applicants");

                    b.Navigation("Departments");

                    b.Navigation("Levels");

                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.Result", b =>
                {
                    b.HasOne("EDSU_SYSTEM.Models.Session", "Sessions")
                        .WithMany()
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.Staff", b =>
                {
                    b.HasOne("EDSU_SYSTEM.Models.Department", "Departments")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Faculty", "Faculties")
                        .WithMany()
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Lga", "LGAs")
                        .WithMany()
                        .HasForeignKey("LGAId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Countries", "Nationalities")
                        .WithMany()
                        .HasForeignKey("NationalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.States", "States")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departments");

                    b.Navigation("Faculties");

                    b.Navigation("LGAs");

                    b.Navigation("Nationalities");

                    b.Navigation("States");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.Student", b =>
                {
                    b.HasOne("EDSU_SYSTEM.Models.Applicant", "Applicants")
                        .WithMany()
                        .HasForeignKey("ApplicantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Staff", "Staffs")
                        .WithMany()
                        .HasForeignKey("ClearedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Session", "Sessions")
                        .WithMany()
                        .HasForeignKey("CurrentSession")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Department", "Departments")
                        .WithMany()
                        .HasForeignKey("Department")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Faculty", "Faculties")
                        .WithMany()
                        .HasForeignKey("Faculty")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Lga", "LGAs")
                        .WithMany()
                        .HasForeignKey("LGAId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Level", "Levels")
                        .WithMany()
                        .HasForeignKey("Level")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Countries", "Nationalities")
                        .WithMany()
                        .HasForeignKey("NationalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.UgProgram", "Programs")
                        .WithMany()
                        .HasForeignKey("ProgrameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.States", "States")
                        .WithMany()
                        .HasForeignKey("StateOfOriginId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Session", "YearOfAdmissions")
                        .WithMany()
                        .HasForeignKey("YearOfAdmission")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Applicants");

                    b.Navigation("Departments");

                    b.Navigation("Faculties");

                    b.Navigation("LGAs");

                    b.Navigation("Levels");

                    b.Navigation("Nationalities");

                    b.Navigation("Programs");

                    b.Navigation("Sessions");

                    b.Navigation("Staffs");

                    b.Navigation("States");

                    b.Navigation("YearOfAdmissions");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.TimeTable", b =>
                {
                    b.HasOne("EDSU_SYSTEM.Models.CourseAllocation", "Courses")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.CourseAllocation", "Staffs")
                        .WithMany()
                        .HasForeignKey("LecturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Courses");

                    b.Navigation("Staffs");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.UgMainWallet", b =>
                {
                    b.HasOne("EDSU_SYSTEM.Models.Applicant", "Applicants")
                        .WithMany()
                        .HasForeignKey("ApplicantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Applicants");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.UgProgress", b =>
                {
                    b.HasOne("EDSU_SYSTEM.Models.UgProgram", "Programs")
                        .WithMany()
                        .HasForeignKey("Program")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.UgStudentSupervisor", "Students")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.UgStudentSupervisor", "Supervisors")
                        .WithMany()
                        .HasForeignKey("SupervisorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Programs");

                    b.Navigation("Students");

                    b.Navigation("Supervisors");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.UgStudentSupervisor", b =>
                {
                    b.HasOne("EDSU_SYSTEM.Models.Student", "Students")
                        .WithMany()
                        .HasForeignKey("Student")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Staff", "Lecturers")
                        .WithMany()
                        .HasForeignKey("Supervisor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lecturers");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.UgSubWallet", b =>
                {
                    b.HasOne("EDSU_SYSTEM.Models.Applicant", "Applicants")
                        .WithMany()
                        .HasForeignKey("ApplicantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Department", "Departments")
                        .WithMany()
                        .HasForeignKey("Department")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Level", "Levels")
                        .WithMany()
                        .HasForeignKey("Level")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Session", "Sessions")
                        .WithMany()
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Applicants");

                    b.Navigation("Departments");

                    b.Navigation("Levels");

                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.Unit", b =>
                {
                    b.HasOne("EDSU_SYSTEM.Models.Position", "Positions")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.UnitName", "Units")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Positions");

                    b.Navigation("Units");
                });

            modelBuilder.Entity("EDSU_SYSTEM.Models.Vacancy", b =>
                {
                    b.HasOne("EDSU_SYSTEM.Models.Department", "Departments")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Faculty", "Faculties")
                        .WithMany()
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Lga", "LGAs")
                        .WithMany()
                        .HasForeignKey("LGAId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Countries", "Nationalities")
                        .WithMany()
                        .HasForeignKey("NationalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.Position", "Positions")
                        .WithMany()
                        .HasForeignKey("Position")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.States", "States")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departments");

                    b.Navigation("Faculties");

                    b.Navigation("LGAs");

                    b.Navigation("Nationalities");

                    b.Navigation("Positions");

                    b.Navigation("States");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("EDSU_SYSTEM.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("EDSU_SYSTEM.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDSU_SYSTEM.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("EDSU_SYSTEM.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
